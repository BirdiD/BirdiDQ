{"version":3,"sources":["stCard.tsx","index.tsx"],"names":["Card","render","_this$props$args","_this","props","args","title","text","image","theme","react_default","a","createElement","styled","div","display","cursor","fontFamily","concat","font","height","borderRadius","overflow","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","backgroundColor","boxShadow","margin","flexDirection","justifyContent","alignItems","textAlign","color","textColor","width","position","transition","Parent","Title","h2","zIndex","fontSize","fontWeight","Text","p","Filter","top","left","onClick","url","window","open","Streamlit","setComponentValue","setFrameHeight","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","stCard","document","getElementById"],"mappings":"0NAQMA,6MASGC,OAAS,WAAiB,IAAAC,EACAC,EAAKC,MAAMC,KAAlCC,EADuBJ,EACvBI,MAAOC,EADgBL,EAChBK,KAAMC,EADUN,EACVM,MAKbC,EAAUN,EAAKC,MAAfK,MAIR,IAAKA,EACH,OAAOC,EAAAC,EAAAC,cAAA,kEAGT,IAIMZ,EAAOa,IAAOC,IAClB,CACEC,QAAS,OACTC,OAAQ,UACRC,WAAU,GAAAC,OAAKT,EAAMU,KAAX,sCACVC,OAAM,GAAAF,OATK,IASL,MACNG,aAAc,OACdC,SAAU,SACVC,gBAAe,OAAAL,OAASV,EAAT,KACfgB,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,gBAAiB,OACjBC,UAAW,kCACXC,OAAM,GAAAX,OAhBK,GAgBL,MACNY,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SACXC,MAAOzB,EAAM0B,UACbC,MAAK,GAAAlB,OAvBK,IAuBL,MACLmB,SAAU,WACVC,WAAY,wBAtBH,6KAkCPC,EAAS1B,IAAOC,IAAI,CACxBM,OAAQA,IACRgB,MAAOA,IACPP,OAAQ,SAGJW,EAAQ3B,IAAO4B,GAAG,CACtBP,MAAO,QACPQ,OAAQ,IACRC,SAAU,MACVC,WAAY,WAGRC,EAAOhC,IAAOiC,EAAE,CACpBZ,MAAO,QACPU,WAAY,SACZF,OAAQ,IACRC,SAAU,QAGNI,EAASlC,IAAOC,IAAI,CACxBa,gBAAiB,qBACjBP,OAAQ,OACRgB,MAAO,OACPC,SAAU,WACVW,IAAK,IACLC,KAAM,IACNP,OAAQ,MAGV,OACEhC,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAACZ,EAAD,CAAMkD,QAAS/C,EAAK+C,SAClBxC,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAAC4B,EAAD,KAAQlC,GACRI,EAAAC,EAAAC,cAACiC,EAAD,KAAOtC,QAMP2C,QAAU,WACZ/C,EAAKC,MAAMC,KAAK8C,KAClBC,OAAOC,KAAKlD,EAAKC,MAAMC,KAAK8C,IAAK,UAEnCG,IAAUC,mBAAkB,wFAxG5BD,IAAUE,6DAIVF,IAAUE,wBANKC,KA8GJC,cAAwB1D,GClHvC2D,IAAS1D,OACPS,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,WAAP,KACElD,EAAAC,EAAAC,cAACiD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.d3689c9d.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport styled from \"@emotion/styled\";\n\nclass Card extends StreamlitComponentBase {\n  public componentDidUpdate(): void {\n    Streamlit.setFrameHeight();\n  }\n\n  public componentDidMount(): void {\n    Streamlit.setFrameHeight();\n  }\n\n  public render = (): ReactNode => {\n    const { title, text, image } = this.props.args;\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props;\n\n    // Maintain compatibility with older versions of Streamlit that don't send\n    // a theme object.\n    if (!theme) {\n      return <div>Theme is undefined, please check streamlit version.</div>;\n    }\n\n    const height = 250;\n    const width = 300;\n    const margin = 40;\n\n    const Card = styled.div(\n      {\n        display: \"flex\",\n        cursor: \"pointer\",\n        fontFamily: `${theme.font}, 'Segoe UI', 'Roboto', sans-serif`,\n        height: `${height}px`,\n        borderRadius: \"20px\",\n        overflow: \"hidden\",\n        backgroundImage: `url(${image})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: \"#eee\",\n        boxShadow: \"0px 0px 40px rgba(0, 0, 0, 0.2)\",\n        margin: `${margin}px`,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n        color: theme.textColor,\n        width: `${width}px`,\n        position: \"relative\",\n        transition: \"all 0.3s ease-in-out\",\n      },\n      `\n      &:hover {\n        box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.4);\n      }\n      &:active {\n        box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.7);\n      }\n      `\n    );\n\n    const Parent = styled.div({\n      height: height + margin * 2,\n      width: width + margin * 2,\n      margin: \"auto\",\n    });\n\n    const Title = styled.h2({\n      color: \"white\",\n      zIndex: \"2\",\n      fontSize: \"2em\",\n      fontWeight: \"bolder\",\n    });\n\n    const Text = styled.p({\n      color: \"white\",\n      fontWeight: \"bolder\",\n      zIndex: \"2\",\n      fontSize: \"1em\",\n    });\n\n    const Filter = styled.div({\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      height: \"100%\",\n      width: \"100%\",\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      zIndex: \"1\",\n    });\n\n    return (\n      <Parent>\n        <Card onClick={this.onClick}>\n          <Filter />\n          <Title>{title}</Title>\n          <Text>{text}</Text>\n        </Card>\n      </Parent>\n    );\n  };\n\n  private onClick = (): void => {\n    if (this.props.args.url) {\n      window.open(this.props.args.url, \"_blank\");\n    }\n    Streamlit.setComponentValue(true);\n  };\n}\n\nexport default withStreamlitConnection(Card);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Card from \"./stCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Card />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}